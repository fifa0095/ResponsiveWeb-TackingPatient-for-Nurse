{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanaton Phukanngam\\\\ResponsiveWeb-TackingPatient-for-Nurse\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios for making HTTP requests\n\nimport './Table.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper'; // TableComponent definition\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableComponent = _ref => {\n  _s();\n\n  let {\n    setSelectedSidebarItem\n  } = _ref;\n  const [patients, setPatients] = useState([]); // State to store patient data\n\n  const [expandedRow, setExpandedRow] = useState(null); // State to manage expanded rows\n  // Function to fetch data from the API\n\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/v1/patients/get');\n      setPatients(response.data); // Set patients data from API response\n    } catch (error) {\n      console.error('Error fetching patients:', error); // Handle any errors\n    }\n  }; // Fetch patient data when the component mounts\n\n\n  useEffect(() => {\n    fetchPatients();\n  }, []); // Function to toggle row expansion\n\n  const toggleRow = index => {\n    setExpandedRow(expandedRow === index ? null : index);\n  }; // Function to get color based on time\n\n\n  const getColorByTime = value => {\n    const hour = parseInt(value.split(':')[0], 10);\n\n    if (value.includes('AM')) {\n      if (hour >= 0 && hour < 8) return 'night'; // เวรดึก (00.00-08.00)\n\n      if (hour >= 8 && hour < 16) return 'morning'; // เวรเช้า (08.00-16.00)\n    } else {\n      if (hour >= 16) return 'evening'; // เวรบ่าย (16.00-00.00)\n\n      return 'afternoon'; // For times between 12:00 PM and 4:00 PM\n    }\n\n    return '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title\",\n          children: \"All Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-link\",\n          children: \"Active Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Search by Name or Hospital Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-pt-button\",\n          onClick: () => setSelectedSidebarItem('Form'),\n          children: \"New PT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"Table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Hospital Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: patients.map((patient, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.HN\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: `${patient.prefix} ${patient.name} ${patient.surname}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.DOB\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleRow(index),\n                  children: expandedRow === index ? 'Hide Details' : 'Show Details'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), expandedRow === index && patient.records.map(record => /*#__PURE__*/_jsxDEV(TableRow, {\n              className: \"sub-row\",\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(record.timestamp).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(record.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: getColorByTime(new Date(record.timestamp).toLocaleTimeString()),\n                children: new Date(record.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `/details/${record.id}`,\n                  children: \"More Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this)]\n            }, record.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableComponent, \"RTXj1lVal6v3y6TDtSX9xNwnvdU=\");\n\n_c = TableComponent;\nexport default TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["C:/Users/Tanaton Phukanngam/ResponsiveWeb-TackingPatient-for-Nurse/src/components/Table/Table.jsx"],"names":["React","useState","useEffect","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TableComponent","setSelectedSidebarItem","patients","setPatients","expandedRow","setExpandedRow","fetchPatients","response","get","data","error","console","toggleRow","index","getColorByTime","value","hour","parseInt","split","includes","map","patient","HN","prefix","name","surname","DOB","gender","records","record","Date","timestamp","toLocaleDateString","toLocaleTimeString","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Import axios for making HTTP requests\r\nimport './Table.css';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n// TableComponent definition\r\nconst TableComponent = ({ setSelectedSidebarItem }) => {\r\n  const [patients, setPatients] = useState([]); // State to store patient data\r\n  const [expandedRow, setExpandedRow] = useState(null); // State to manage expanded rows\r\n\r\n  // Function to fetch data from the API\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/v1/patients/get');\r\n      setPatients(response.data); // Set patients data from API response\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error); // Handle any errors\r\n    }\r\n  };\r\n\r\n  // Fetch patient data when the component mounts\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  // Function to toggle row expansion\r\n  const toggleRow = (index) => {\r\n    setExpandedRow(expandedRow === index ? null : index);\r\n  };\r\n\r\n  // Function to get color based on time\r\n  const getColorByTime = (value) => {\r\n    const hour = parseInt(value.split(':')[0], 10);\r\n    if (value.includes('AM')) {\r\n      if (hour >= 0 && hour < 8) return 'night'; // เวรดึก (00.00-08.00)\r\n      if (hour >= 8 && hour < 16) return 'morning'; // เวรเช้า (08.00-16.00)\r\n    } else {\r\n      if (hour >= 16) return 'evening'; // เวรบ่าย (16.00-00.00)\r\n      return 'afternoon'; // For times between 12:00 PM and 4:00 PM\r\n    }\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-table\">\r\n      <div className=\"header-container\">\r\n        <div className=\"header-left\">\r\n          <div className=\"header-title\">All Customers</div>\r\n          <div className=\"header-link\">Active Members</div>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Search by Name or Hospital Number\"\r\n          />\r\n          <button\r\n            className=\"new-pt-button\"\r\n            onClick={() => setSelectedSidebarItem('Form')}\r\n          >\r\n            New PT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className=\"Table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Hospital Number</TableCell>\r\n              <TableCell>Customer Name</TableCell>\r\n              <TableCell>Date of Birth</TableCell>\r\n              <TableCell>Gender</TableCell>\r\n              <TableCell>Details</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {patients.map((patient, index) => (\r\n              <React.Fragment key={index}>\r\n                <TableRow>\r\n                  <TableCell>{patient.HN}</TableCell>\r\n                  <TableCell>{`${patient.prefix} ${patient.name} ${patient.surname}`}</TableCell>\r\n                  <TableCell>{patient.DOB}</TableCell>\r\n                  <TableCell>{patient.gender}</TableCell>\r\n                  <TableCell>\r\n                    <button onClick={() => toggleRow(index)}>\r\n                      {expandedRow === index ? 'Hide Details' : 'Show Details'}\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n                {expandedRow === index &&\r\n                  patient.records.map((record) => (\r\n                    <TableRow key={record.id} className=\"sub-row\">\r\n                      <TableCell colSpan={2}></TableCell>\r\n                      <TableCell>{new Date(record.timestamp).toLocaleDateString()}</TableCell>\r\n                      <TableCell>{new Date(record.timestamp).toLocaleTimeString()}</TableCell>\r\n                      <TableCell className={getColorByTime(new Date(record.timestamp).toLocaleTimeString())}>\r\n                        {new Date(record.timestamp).toLocaleTimeString()}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <a href={`/details/${record.id}`}>More Details</a>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </React.Fragment>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n"]},"metadata":{},"sourceType":"module"}