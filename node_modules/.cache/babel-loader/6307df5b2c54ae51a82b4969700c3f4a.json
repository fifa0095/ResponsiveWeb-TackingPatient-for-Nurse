{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanaton Phukanngam\\\\ResponsiveWeb-TackingPatient-for-Nurse\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Table.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper'; // Mock Data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createData = (name, hospitalNumber, date, time, details) => {\n  return {\n    name,\n    hospitalNumber,\n    date,\n    time,\n    details\n  };\n};\n\nconst rows = [createData('Jane Cooper', 'HN001', '2024-08-09', '08:30 AM', 'Detail information about Jane Cooper.'), createData('Floyd Miles', 'HN002', '2024-08-09', '02:15 PM', 'Detail information about Floyd Miles.'), createData('Ronald Richards', 'HN003', '2024-08-09', '07:45 PM', 'Detail information about Ronald Richards.'), createData('Marvin McKinney', 'HN004', '2024-08-08', '10:00 AM', 'Detail information about Marvin McKinney.'), createData('Jerome Bell', 'HN005', '2024-08-07', '01:30 PM', 'Detail information about Jerome Bell.'), createData('Kathryn Murphy', 'HN006', '2024-08-06', '05:00 PM', 'Detail information about Kathryn Murphy.'), createData('Jacob Jones', 'HN007', '2024-08-05', '09:15 AM', 'Detail information about Jacob Jones.'), createData('Kristin Watson', 'HN008', '2024-08-04', '03:00 PM', 'Detail information about Kristin Watson.'), createData('Alex Brown', 'HN009', '2024-08-03', '06:30 PM', 'Detail information about Alex Brown.'), createData('Emily Davis', 'HN010', '2024-08-02', '11:00 AM', 'Detail information about Emily Davis.'), createData('Oliver Wilson', 'HN011', '2024-08-01', '04:45 PM', 'Detail information about Oliver Wilson.'), createData('Sophia Johnson', 'HN012', '2024-07-31', '08:00 AM', 'Detail information about Sophia Johnson.'), createData('Liam Smith', 'HN013', '2024-07-30', '12:30 PM', 'Detail information about Liam Smith.'), createData('Mia Martinez', 'HN014', '2024-07-29', '07:00 PM', 'Detail information about Mia Martinez.'), createData('Noah Lee', 'HN015', '2024-07-28', '09:45 AM', 'Detail information about Noah Lee.'), createData('Isabella Clark', 'HN016', '2024-07-27', '03:30 PM', 'Detail information about Isabella Clark.'), createData('Ethan Lewis', 'HN017', '2024-07-26', '06:15 PM', 'Detail information about Ethan Lewis.'), createData('Ava Walker', 'HN018', '2024-07-25', '10:30 AM', 'Detail information about Ava Walker.'), createData('Lucas Hall', 'HN019', '2024-07-24', '02:00 PM', 'Detail information about Lucas Hall.'), createData('Charlotte Young', 'HN020', '2024-07-23', '07:30 PM', 'Detail information about Charlotte Young.'), createData('James King', 'HN021', '2024-07-22', '08:45 AM', 'Detail information about James King.'), createData('Amelia Scott', 'HN022', '2024-07-21', '12:00 PM', 'Detail information about Amelia Scott.'), createData('Benjamin Wright', 'HN023', '2024-07-20', '03:15 PM', 'Detail information about Benjamin Wright.'), createData('Harper Adams', 'HN024', '2024-07-19', '06:00 PM', 'Detail information about Harper Adams.'), createData('Jack White', 'HN025', '2024-07-18', '09:30 AM', 'Detail information about Jack White.'), createData('Evelyn Green', 'HN026', '2024-07-17', '02:45 PM', 'Detail information about Evelyn Green.'), createData('Henry Adams', 'HN027', '2024-07-16', '05:15 PM', 'Detail information about Henry Adams.'), createData('Ella Nelson', 'HN028', '2024-07-15', '08:30 AM', 'Detail information about Ella Nelson.'), createData('Aiden Carter', 'HN029', '2024-07-14', '12:00 PM', 'Detail information about Aiden Carter.'), createData('Mia Evans', 'HN030', '2024-07-13', '03:30 PM', 'Detail information about Mia Evans.'), createData('Noah Thompson', 'HN031', '2024-07-12', '07:00 PM', 'Detail information about Noah Thompson.'), createData('Olivia Martinez', 'HN032', '2024-07-11', '10:15 AM', 'Detail information about Olivia Martinez.')];\n\nconst TableComponent = _ref => {\n  _s();\n\n  let {\n    setSelectedSidebarItem\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const rowsPerPage = 15; // Filter and paginate data\n\n  const filteredRows = rows.filter(row => row.name.toLowerCase().includes(searchTerm.toLowerCase()) || row.hospitalNumber.toLowerCase().includes(searchTerm.toLowerCase()));\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRows = filteredRows.slice(indexOfFirstRow, indexOfLastRow); // Add empty rows if there are less than rowsPerPage rows\n\n  const paddedRows = [...currentRows, ...Array(Math.max(rowsPerPage - currentRows.length, 0)).fill({\n    name: '',\n    hospitalNumber: '',\n    date: '',\n    time: '',\n    details: ''\n  })];\n\n  const handlePageChange = direction => {\n    if (direction === 'next' && indexOfLastRow < filteredRows.length) {\n      setCurrentPage(currentPage + 1);\n    } else if (direction === 'prev' && currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const getColorByTime = value => {\n    if (value.includes('AM')) return 'morning';\n    if (value.includes('PM') && parseInt(value.split(':')[0], 10) < 6) return 'afternoon';\n    return 'evening';\n  };\n\n  const handleShowDetails = row => {\n    setSelectedPatient(row); // Scroll to the details section\n\n    document.getElementById('details-section').scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title\",\n          children: \"All Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-link\",\n          children: \"Active Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Search by Name or Hospital Number\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-pt-button\",\n          onClick: () => setSelectedSidebarItem('Form'),\n          children: \"New PT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"Table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Hospital Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: paddedRows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.hospitalNumber || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.name || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.date || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: getColorByTime(row.time),\n              children: row.time || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.name ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleShowDetails(row),\n                children: \"Show Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: true,\n                children: \"No Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), selectedPatient && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"details-section\",\n      className: \"details-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hospital Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.hospitalNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.details]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), filteredRows.length > rowsPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Showing data \", indexOfFirstRow + 1, \" to \", Math.min(indexOfLastRow, filteredRows.length), \" of \", filteredRows.length, \" entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange('prev'),\n          disabled: currentPage === 1,\n          children: '<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange('next'),\n          disabled: indexOfLastRow >= filteredRows.length,\n          children: '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableComponent, \"DDGO6hM0mQ+sWjQHOgqr4/vtuSY=\");\n\n_c = TableComponent;\nexport default TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["C:/Users/Tanaton Phukanngam/ResponsiveWeb-TackingPatient-for-Nurse/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","name","hospitalNumber","date","time","details","rows","TableComponent","setSelectedSidebarItem","searchTerm","setSearchTerm","currentPage","setCurrentPage","selectedPatient","setSelectedPatient","rowsPerPage","filteredRows","filter","row","toLowerCase","includes","indexOfLastRow","indexOfFirstRow","currentRows","slice","paddedRows","Array","Math","max","length","fill","handlePageChange","direction","getColorByTime","value","parseInt","split","handleShowDetails","document","getElementById","scrollIntoView","behavior","e","target","map","index","min"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Table.css';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n// Mock Data\r\nconst createData = (name, hospitalNumber, date, time, details) => {\r\n  return { name, hospitalNumber, date, time, details };\r\n};\r\n\r\nconst rows = [\r\n  createData('Jane Cooper', 'HN001', '2024-08-09', '08:30 AM', 'Detail information about Jane Cooper.'),\r\n  createData('Floyd Miles', 'HN002', '2024-08-09', '02:15 PM', 'Detail information about Floyd Miles.'),\r\n  createData('Ronald Richards', 'HN003', '2024-08-09', '07:45 PM', 'Detail information about Ronald Richards.'),\r\n  createData('Marvin McKinney', 'HN004', '2024-08-08', '10:00 AM', 'Detail information about Marvin McKinney.'),\r\n  createData('Jerome Bell', 'HN005', '2024-08-07', '01:30 PM', 'Detail information about Jerome Bell.'),\r\n  createData('Kathryn Murphy', 'HN006', '2024-08-06', '05:00 PM', 'Detail information about Kathryn Murphy.'),\r\n  createData('Jacob Jones', 'HN007', '2024-08-05', '09:15 AM', 'Detail information about Jacob Jones.'),\r\n  createData('Kristin Watson', 'HN008', '2024-08-04', '03:00 PM', 'Detail information about Kristin Watson.'),\r\n  createData('Alex Brown', 'HN009', '2024-08-03', '06:30 PM', 'Detail information about Alex Brown.'),\r\n  createData('Emily Davis', 'HN010', '2024-08-02', '11:00 AM', 'Detail information about Emily Davis.'),\r\n  createData('Oliver Wilson', 'HN011', '2024-08-01', '04:45 PM', 'Detail information about Oliver Wilson.'),\r\n  createData('Sophia Johnson', 'HN012', '2024-07-31', '08:00 AM', 'Detail information about Sophia Johnson.'),\r\n  createData('Liam Smith', 'HN013', '2024-07-30', '12:30 PM', 'Detail information about Liam Smith.'),\r\n  createData('Mia Martinez', 'HN014', '2024-07-29', '07:00 PM', 'Detail information about Mia Martinez.'),\r\n  createData('Noah Lee', 'HN015', '2024-07-28', '09:45 AM', 'Detail information about Noah Lee.'),\r\n  createData('Isabella Clark', 'HN016', '2024-07-27', '03:30 PM', 'Detail information about Isabella Clark.'),\r\n  createData('Ethan Lewis', 'HN017', '2024-07-26', '06:15 PM', 'Detail information about Ethan Lewis.'),\r\n  createData('Ava Walker', 'HN018', '2024-07-25', '10:30 AM', 'Detail information about Ava Walker.'),\r\n  createData('Lucas Hall', 'HN019', '2024-07-24', '02:00 PM', 'Detail information about Lucas Hall.'),\r\n  createData('Charlotte Young', 'HN020', '2024-07-23', '07:30 PM', 'Detail information about Charlotte Young.'),\r\n  createData('James King', 'HN021', '2024-07-22', '08:45 AM', 'Detail information about James King.'),\r\n  createData('Amelia Scott', 'HN022', '2024-07-21', '12:00 PM', 'Detail information about Amelia Scott.'),\r\n  createData('Benjamin Wright', 'HN023', '2024-07-20', '03:15 PM', 'Detail information about Benjamin Wright.'),\r\n  createData('Harper Adams', 'HN024', '2024-07-19', '06:00 PM', 'Detail information about Harper Adams.'),\r\n  createData('Jack White', 'HN025', '2024-07-18', '09:30 AM', 'Detail information about Jack White.'),\r\n  createData('Evelyn Green', 'HN026', '2024-07-17', '02:45 PM', 'Detail information about Evelyn Green.'),\r\n  createData('Henry Adams', 'HN027', '2024-07-16', '05:15 PM', 'Detail information about Henry Adams.'),\r\n  createData('Ella Nelson', 'HN028', '2024-07-15', '08:30 AM', 'Detail information about Ella Nelson.'),\r\n  createData('Aiden Carter', 'HN029', '2024-07-14', '12:00 PM', 'Detail information about Aiden Carter.'),\r\n  createData('Mia Evans', 'HN030', '2024-07-13', '03:30 PM', 'Detail information about Mia Evans.'),\r\n  createData('Noah Thompson', 'HN031', '2024-07-12', '07:00 PM', 'Detail information about Noah Thompson.'),\r\n  createData('Olivia Martinez', 'HN032', '2024-07-11', '10:15 AM', 'Detail information about Olivia Martinez.')\r\n];\r\n\r\nconst TableComponent = ({ setSelectedSidebarItem }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n  const rowsPerPage = 15;\r\n\r\n  // Filter and paginate data\r\n  const filteredRows = rows.filter(row =>\r\n    row.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    row.hospitalNumber.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const indexOfLastRow = currentPage * rowsPerPage;\r\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n  const currentRows = filteredRows.slice(indexOfFirstRow, indexOfLastRow);\r\n\r\n  // Add empty rows if there are less than rowsPerPage rows\r\n  const paddedRows = [\r\n    ...currentRows,\r\n    ...Array(Math.max(rowsPerPage - currentRows.length, 0)).fill({\r\n      name: '',\r\n      hospitalNumber: '',\r\n      date: '',\r\n      time: '',\r\n      details: ''\r\n    })\r\n  ];\r\n\r\n  const handlePageChange = (direction) => {\r\n    if (direction === 'next' && indexOfLastRow < filteredRows.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    } else if (direction === 'prev' && currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const getColorByTime = (value) => {\r\n    if (value.includes('AM')) return 'morning';\r\n    if (value.includes('PM') && parseInt(value.split(':')[0], 10) < 6)\r\n      return 'afternoon';\r\n    return 'evening';\r\n  };\r\n\r\n  const handleShowDetails = (row) => {\r\n    setSelectedPatient(row);\r\n    // Scroll to the details section\r\n    document.getElementById('details-section').scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-table\">\r\n      <div className=\"header-container\">\r\n        <div className=\"header-left\">\r\n          <div className=\"header-title\">All Customers</div>\r\n          <div className=\"header-link\">Active Members</div>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Search by Name or Hospital Number\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button \r\n            className=\"new-pt-button\" \r\n            onClick={() => setSelectedSidebarItem('Form')}\r\n          >\r\n            New PT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className=\"Table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Hospital Number</TableCell>\r\n              <TableCell>Customer Name</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Time</TableCell>\r\n              <TableCell>Details</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paddedRows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{row.hospitalNumber || 'No data'}</TableCell>\r\n                <TableCell>{row.name || 'No data'}</TableCell>\r\n                <TableCell>{row.date || 'No data'}</TableCell>\r\n                <TableCell className={getColorByTime(row.time)}>{row.time || 'No data'}</TableCell>\r\n                <TableCell>\r\n                  {row.name ? (\r\n                    <button onClick={() => handleShowDetails(row)}>\r\n                      Show Details\r\n                    </button>\r\n                  ) : (\r\n                    <button disabled>No Details</button>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {selectedPatient && (\r\n        <div id=\"details-section\" className=\"details-section\">\r\n          <h2>Patient Details</h2>\r\n          <p><strong>Name:</strong> {selectedPatient.name}</p>\r\n          <p><strong>Hospital Number:</strong> {selectedPatient.hospitalNumber}</p>\r\n          <p><strong>Date:</strong> {selectedPatient.date}</p>\r\n          <p><strong>Time:</strong> {selectedPatient.time}</p>\r\n          <p><strong>Details:</strong> {selectedPatient.details}</p>\r\n        </div>\r\n      )}\r\n\r\n      {filteredRows.length > rowsPerPage && (\r\n        <div className=\"pagination\">\r\n          <span>Showing data {indexOfFirstRow + 1} to {Math.min(indexOfLastRow, filteredRows.length)} of {filteredRows.length} entries</span>\r\n          <div className=\"pagination-controls\">\r\n            <button\r\n              onClick={() => handlePageChange('prev')}\r\n              disabled={currentPage === 1}\r\n            >\r\n              {'<'}\r\n            </button>\r\n            <button\r\n              onClick={() => handlePageChange('next')}\r\n              disabled={indexOfLastRow >= filteredRows.length}\r\n            >\r\n              {'>'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n"]},"metadata":{},"sourceType":"module"}