{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanaton Phukanngam\\\\ResponsiveWeb-TackingPatient-for-Nurse\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Table.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper'; // Mock Data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createData = (name, hospitalNumber, date, time) => {\n  return {\n    name,\n    hospitalNumber,\n    date,\n    time\n  };\n};\n\nconst rows = [createData('Jane Cooper', 'HN001', '2024-08-09', '08:30 AM'), createData('Floyd Miles', 'HN002', '2024-08-09', '02:15 PM'), createData('Ronald Richards', 'HN003', '2024-08-09', '07:45 PM'), createData('Marvin McKinney', 'HN004', '2024-08-08', '10:00 AM'), createData('Jerome Bell', 'HN005', '2024-08-07', '01:30 PM'), createData('Kathryn Murphy', 'HN006', '2024-08-06', '05:00 PM'), createData('Jacob Jones', 'HN007', '2024-08-05', '09:15 AM'), createData('Kristin Watson', 'HN008', '2024-08-04', '03:00 PM'), createData('Alex Brown', 'HN009', '2024-08-03', '06:30 PM'), createData('Emily Davis', 'HN010', '2024-08-02', '11:00 AM'), createData('Oliver Wilson', 'HN011', '2024-08-01', '04:45 PM'), createData('Sophia Johnson', 'HN012', '2024-07-31', '08:00 AM'), createData('Liam Smith', 'HN013', '2024-07-30', '12:30 PM'), createData('Mia Martinez', 'HN014', '2024-07-29', '07:00 PM'), createData('Noah Lee', 'HN015', '2024-07-28', '09:45 AM'), createData('Isabella Clark', 'HN016', '2024-07-27', '03:30 PM'), createData('Ethan Lewis', 'HN017', '2024-07-26', '06:15 PM'), createData('Ava Walker', 'HN018', '2024-07-25', '10:30 AM'), createData('Lucas Hall', 'HN019', '2024-07-24', '02:00 PM'), createData('Charlotte Young', 'HN020', '2024-07-23', '07:30 PM')];\n\nconst TableComponent = () => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const rowsPerPage = 15; // Filter and paginate data\n\n  const filteredRows = rows.filter(row => row.name.toLowerCase().includes(searchTerm.toLowerCase()) || row.hospitalNumber.toLowerCase().includes(searchTerm.toLowerCase()));\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRows = filteredRows.slice(indexOfFirstRow, indexOfLastRow); // Add empty rows if there are less than rowsPerPage rows\n\n  const paddedRows = [...currentRows, ...Array(Math.max(rowsPerPage - currentRows.length, 0)).fill({\n    name: '',\n    hospitalNumber: '',\n    date: '',\n    time: ''\n  })];\n\n  const handlePageChange = direction => {\n    if (direction === 'next' && indexOfLastRow < filteredRows.length) {\n      setCurrentPage(currentPage + 1);\n    } else if (direction === 'prev' && currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const getColorByTime = value => {\n    if (value.includes('AM')) return 'morning';\n    if (value.includes('PM') && parseInt(value.split(':')[0], 10) < 6) return 'afternoon';\n    return 'evening';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title\",\n          children: \"All Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-link\",\n          children: \"Active Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Search by Name or Hospital Number\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-pt-button\",\n          children: \"New PT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"Table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Hospital Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: paddedRows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.hospitalNumber || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.name || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.date || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: getColorByTime(row.time),\n              children: row.time || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.name ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => alert(`Details for ${row.name}`),\n                children: \"Show Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: true,\n                children: \"No Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), filteredRows.length > rowsPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Showing data \", indexOfFirstRow + 1, \" to \", Math.min(indexOfLastRow, filteredRows.length), \" of \", filteredRows.length, \" entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange('prev'),\n          disabled: currentPage === 1,\n          children: '<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange('next'),\n          disabled: indexOfLastRow >= filteredRows.length,\n          children: '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableComponent, \"dGgBH5XEzYJTVyBHEFzq+fSbN2M=\");\n\n_c = TableComponent;\nexport default TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["C:/Users/Tanaton Phukanngam/ResponsiveWeb-TackingPatient-for-Nurse/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","name","hospitalNumber","date","time","rows","TableComponent","searchTerm","setSearchTerm","currentPage","setCurrentPage","rowsPerPage","filteredRows","filter","row","toLowerCase","includes","indexOfLastRow","indexOfFirstRow","currentRows","slice","paddedRows","Array","Math","max","length","fill","handlePageChange","direction","getColorByTime","value","parseInt","split","e","target","map","index","alert","min"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Table.css';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n// Mock Data\r\nconst createData = (name, hospitalNumber, date, time) => {\r\n  return { name, hospitalNumber, date, time };\r\n};\r\n\r\nconst rows = [\r\n  createData('Jane Cooper', 'HN001', '2024-08-09', '08:30 AM'),\r\n  createData('Floyd Miles', 'HN002', '2024-08-09', '02:15 PM'),\r\n  createData('Ronald Richards', 'HN003', '2024-08-09', '07:45 PM'),\r\n  createData('Marvin McKinney', 'HN004', '2024-08-08', '10:00 AM'),\r\n  createData('Jerome Bell', 'HN005', '2024-08-07', '01:30 PM'),\r\n  createData('Kathryn Murphy', 'HN006', '2024-08-06', '05:00 PM'),\r\n  createData('Jacob Jones', 'HN007', '2024-08-05', '09:15 AM'),\r\n  createData('Kristin Watson', 'HN008', '2024-08-04', '03:00 PM'),\r\n  createData('Alex Brown', 'HN009', '2024-08-03', '06:30 PM'),\r\n  createData('Emily Davis', 'HN010', '2024-08-02', '11:00 AM'),\r\n  createData('Oliver Wilson', 'HN011', '2024-08-01', '04:45 PM'),\r\n  createData('Sophia Johnson', 'HN012', '2024-07-31', '08:00 AM'),\r\n  createData('Liam Smith', 'HN013', '2024-07-30', '12:30 PM'),\r\n  createData('Mia Martinez', 'HN014', '2024-07-29', '07:00 PM'),\r\n  createData('Noah Lee', 'HN015', '2024-07-28', '09:45 AM'),\r\n  createData('Isabella Clark', 'HN016', '2024-07-27', '03:30 PM'),\r\n  createData('Ethan Lewis', 'HN017', '2024-07-26', '06:15 PM'),\r\n  createData('Ava Walker', 'HN018', '2024-07-25', '10:30 AM'),\r\n  createData('Lucas Hall', 'HN019', '2024-07-24', '02:00 PM'),\r\n  createData('Charlotte Young', 'HN020', '2024-07-23', '07:30 PM'),\r\n];\r\n\r\nconst TableComponent = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const rowsPerPage = 15;\r\n\r\n  // Filter and paginate data\r\n  const filteredRows = rows.filter(row =>\r\n    row.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    row.hospitalNumber.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const indexOfLastRow = currentPage * rowsPerPage;\r\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n  const currentRows = filteredRows.slice(indexOfFirstRow, indexOfLastRow);\r\n\r\n  // Add empty rows if there are less than rowsPerPage rows\r\n  const paddedRows = [...currentRows, ...Array(Math.max(rowsPerPage - currentRows.length, 0)).fill({ name: '', hospitalNumber: '', date: '', time: '' })];\r\n\r\n  const handlePageChange = (direction) => {\r\n    if (direction === 'next' && indexOfLastRow < filteredRows.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    } else if (direction === 'prev' && currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const getColorByTime = (value) => {\r\n    if (value.includes('AM')) return 'morning';\r\n    if (value.includes('PM') && parseInt(value.split(':')[0], 10) < 6) return 'afternoon';\r\n    return 'evening';\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-table\">\r\n      <div className=\"header-container\">\r\n        <div className=\"header-left\">\r\n          <div className=\"header-title\">All Customers</div>\r\n          <div className=\"header-link\">Active Members</div>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Search by Name or Hospital Number\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button className=\"new-pt-button\">New PT</button>\r\n        </div>\r\n      </div>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className=\"Table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Hospital Number</TableCell>\r\n              <TableCell>Customer Name</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Time</TableCell>\r\n              <TableCell>Details</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paddedRows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{row.hospitalNumber || 'No data'}</TableCell>\r\n                <TableCell>{row.name || 'No data'}</TableCell>\r\n                <TableCell>{row.date || 'No data'}</TableCell>\r\n                <TableCell className={getColorByTime(row.time)}>{row.time || 'No data'}</TableCell>\r\n                <TableCell>\r\n                  {row.name ? (\r\n                    <button onClick={() => alert(`Details for ${row.name}`)}>\r\n                      Show Details\r\n                    </button>\r\n                  ) : (\r\n                    <button disabled>No Details</button>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {filteredRows.length > rowsPerPage && (\r\n        <div className=\"pagination\">\r\n          <span>Showing data {indexOfFirstRow + 1} to {Math.min(indexOfLastRow, filteredRows.length)} of {filteredRows.length} entries</span>\r\n          <div className=\"pagination-controls\">\r\n            <button onClick={() => handlePageChange('prev')} disabled={currentPage === 1}>\r\n              {'<'}\r\n            </button>\r\n            <button onClick={() => handlePageChange('next')} disabled={indexOfLastRow >= filteredRows.length}>\r\n              {'>'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n"]},"metadata":{},"sourceType":"module"}