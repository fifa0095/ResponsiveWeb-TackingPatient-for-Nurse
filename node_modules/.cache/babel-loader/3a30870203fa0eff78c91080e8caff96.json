{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanaton Phukanngam\\\\ResponsiveWeb-TackingPatient-for-Nurse\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Table.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper'; // Mock Data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createData = (HN, prefix, name, surname, gender, DOB, records) => {\n  return {\n    HN,\n    prefix,\n    name,\n    surname,\n    gender,\n    DOB,\n    records\n  };\n};\n\nconst rows = [createData('AI12345', 'Mr.', 'John', 'Doe', 'Male', '1990-01-01', [{\n  id: 'rec_Fri Aug 09 2024 14:39:25 GMT+0700 (เวลาอินโดจีน)',\n  RR: 'ปกติ',\n  extra_food: 'ผักบด',\n  notes: 'ไม่มีอาการผิดปกติ',\n  HR: 'ปกติ',\n  breath_pattern: 'หายใจปกติ',\n  food_type: 'อาหารปกติ',\n  extra_symptoms: 'มีไข้, ไอ',\n  eat_method: 'รับประทานเองได้',\n  BP: 'ปกติ',\n  sleep: 'นอนหลับได้',\n  BT: 'ไม่มีไข้',\n  O2sat: 'ปกติ',\n  excretion: 'ดี',\n  food_intake: ['ข้าว', 'ผลไม้'],\n  conscious: 'ตื่น รู้สึกตัวดี',\n  timestamp: '2024-08-09T14:39:25.853Z'\n} // Additional records...\n]) // Additional patients...\n];\n\nconst TableComponent = _ref => {\n  _s();\n\n  var _rows$find;\n\n  let {\n    setSelectedSidebarItem\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPatientHN, setSelectedPatientHN] = useState(null);\n  const rowsPerPage = 15; // Filter and paginate data\n\n  const filteredRows = rows.filter(row => row.HN.toLowerCase().includes(searchTerm.toLowerCase()) || row.name.toLowerCase().includes(searchTerm.toLowerCase()) || row.surname.toLowerCase().includes(searchTerm.toLowerCase()));\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRows = filteredRows.slice(indexOfFirstRow, indexOfLastRow); // Add empty rows if there are less than rowsPerPage rows\n\n  const paddedRows = [...currentRows, ...Array(Math.max(rowsPerPage - currentRows.length, 0)).fill({\n    HN: '',\n    prefix: '',\n    name: '',\n    surname: '',\n    gender: '',\n    DOB: '',\n    records: []\n  })];\n\n  const handlePageChange = direction => {\n    if (direction === 'next' && indexOfLastRow < filteredRows.length) {\n      setCurrentPage(currentPage + 1);\n    } else if (direction === 'prev' && currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const getColorByGender = gender => {\n    if (gender === 'Male') return 'male';\n    if (gender === 'Female') return 'female';\n    return '';\n  };\n\n  const handleShowDetails = HN => {\n    setSelectedPatientHN(HN); // Scroll to the details section\n\n    document.getElementById('details-section').scrollIntoView({\n      behavior: 'smooth'\n    });\n  }; // Filter records for the selected patient\n\n\n  const selectedPatientRecords = ((_rows$find = rows.find(row => row.HN === selectedPatientHN)) === null || _rows$find === void 0 ? void 0 : _rows$find.records) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title\",\n          children: \"All Patients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-link\",\n          children: \"Active Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Search by HN, Name, or Surname\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-pt-button\",\n          onClick: () => setSelectedSidebarItem('Form'),\n          children: \"New PT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"Table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"HN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Prefix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"DOB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: paddedRows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.HN || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.prefix || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.name || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.surname || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: getColorByGender(row.gender),\n              children: row.gender || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.DOB || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.HN ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleShowDetails(row.HN),\n                children: \"Show Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: true,\n                children: \"No Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), selectedPatientRecords.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"details-section\",\n      className: \"details-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), selectedPatientRecords.map((record, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"record-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 18\n          }, this), \" \", record.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"RR:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 18\n          }, this), \" \", record.RR]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Extra Food:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 18\n          }, this), \" \", record.extra_food]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Notes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 18\n          }, this), \" \", record.notes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"HR:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 18\n          }, this), \" \", record.HR]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Breath Pattern:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 18\n          }, this), \" \", record.breath_pattern]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Food Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 18\n          }, this), \" \", record.food_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Extra Symptoms:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 18\n          }, this), \" \", record.extra_symptoms]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Eat Method:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 18\n          }, this), \" \", record.eat_method]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"BP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 18\n          }, this), \" \", record.BP]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sleep:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 18\n          }, this), \" \", record.sleep]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"BT:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 18\n          }, this), \" \", record.BT]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"O2 Saturation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 18\n          }, this), \" \", record.O2sat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Excretion:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 18\n          }, this), \" \", record.excretion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Food Intake:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 18\n          }, this), \" \", record.food_intake.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Conscious:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 18\n          }, this), \" \", record.conscious]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Timestamp:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 18\n          }, this), \" \", new Date(record.timestamp).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), filteredRows.length > rowsPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Showing data \", indexOfFirstRow + 1, \" to \", Math.min(indexOfLastRow, filteredRows.length), \" of \", filteredRows.length, \" entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange('prev'),\n          disabled: currentPage === 1,\n          children: '<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange('next'),\n          disabled: indexOfLastRow >= filteredRows.length,\n          children: '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableComponent, \"rmr/dTMgWLfS61tgRYx2TnZBT6A=\");\n\n_c = TableComponent;\nexport default TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["C:/Users/Tanaton Phukanngam/ResponsiveWeb-TackingPatient-for-Nurse/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","HN","prefix","name","surname","gender","DOB","records","rows","id","RR","extra_food","notes","HR","breath_pattern","food_type","extra_symptoms","eat_method","BP","sleep","BT","O2sat","excretion","food_intake","conscious","timestamp","TableComponent","setSelectedSidebarItem","searchTerm","setSearchTerm","currentPage","setCurrentPage","selectedPatientHN","setSelectedPatientHN","rowsPerPage","filteredRows","filter","row","toLowerCase","includes","indexOfLastRow","indexOfFirstRow","currentRows","slice","paddedRows","Array","Math","max","length","fill","handlePageChange","direction","getColorByGender","handleShowDetails","document","getElementById","scrollIntoView","behavior","selectedPatientRecords","find","e","target","value","map","index","record","join","Date","toLocaleString","min"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Table.css';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n// Mock Data\r\nconst createData = (HN, prefix, name, surname, gender, DOB, records) => {\r\n  return { HN, prefix, name, surname, gender, DOB, records };\r\n};\r\n\r\nconst rows = [\r\n  createData('AI12345', 'Mr.', 'John', 'Doe', 'Male', '1990-01-01', [\r\n    {\r\n      id: 'rec_Fri Aug 09 2024 14:39:25 GMT+0700 (เวลาอินโดจีน)',\r\n      RR: 'ปกติ',\r\n      extra_food: 'ผักบด',\r\n      notes: 'ไม่มีอาการผิดปกติ',\r\n      HR: 'ปกติ',\r\n      breath_pattern: 'หายใจปกติ',\r\n      food_type: 'อาหารปกติ',\r\n      extra_symptoms: 'มีไข้, ไอ',\r\n      eat_method: 'รับประทานเองได้',\r\n      BP: 'ปกติ',\r\n      sleep: 'นอนหลับได้',\r\n      BT: 'ไม่มีไข้',\r\n      O2sat: 'ปกติ',\r\n      excretion: 'ดี',\r\n      food_intake: ['ข้าว', 'ผลไม้'],\r\n      conscious: 'ตื่น รู้สึกตัวดี',\r\n      timestamp: '2024-08-09T14:39:25.853Z'\r\n    },\r\n    // Additional records...\r\n  ]),\r\n  // Additional patients...\r\n];\r\n\r\nconst TableComponent = ({ setSelectedSidebarItem }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedPatientHN, setSelectedPatientHN] = useState(null);\r\n  const rowsPerPage = 15;\r\n\r\n  // Filter and paginate data\r\n  const filteredRows = rows.filter(row =>\r\n    row.HN.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    row.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    row.surname.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const indexOfLastRow = currentPage * rowsPerPage;\r\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n  const currentRows = filteredRows.slice(indexOfFirstRow, indexOfLastRow);\r\n\r\n  // Add empty rows if there are less than rowsPerPage rows\r\n  const paddedRows = [\r\n    ...currentRows,\r\n    ...Array(Math.max(rowsPerPage - currentRows.length, 0)).fill({\r\n      HN: '',\r\n      prefix: '',\r\n      name: '',\r\n      surname: '',\r\n      gender: '',\r\n      DOB: '',\r\n      records: []\r\n    })\r\n  ];\r\n\r\n  const handlePageChange = (direction) => {\r\n    if (direction === 'next' && indexOfLastRow < filteredRows.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    } else if (direction === 'prev' && currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const getColorByGender = (gender) => {\r\n    if (gender === 'Male') return 'male';\r\n    if (gender === 'Female') return 'female';\r\n    return '';\r\n  };\r\n\r\n  const handleShowDetails = (HN) => {\r\n    setSelectedPatientHN(HN);\r\n    // Scroll to the details section\r\n    document.getElementById('details-section').scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Filter records for the selected patient\r\n  const selectedPatientRecords = rows.find(row => row.HN === selectedPatientHN)?.records || [];\r\n\r\n  return (\r\n    <div className=\"container-table\">\r\n      <div className=\"header-container\">\r\n        <div className=\"header-left\">\r\n          <div className=\"header-title\">All Patients</div>\r\n          <div className=\"header-link\">Active Records</div>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Search by HN, Name, or Surname\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button \r\n            className=\"new-pt-button\" \r\n            onClick={() => setSelectedSidebarItem('Form')}\r\n          >\r\n            New PT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className=\"Table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>HN</TableCell>\r\n              <TableCell>Prefix</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Surname</TableCell>\r\n              <TableCell>Gender</TableCell>\r\n              <TableCell>DOB</TableCell>\r\n              <TableCell>Details</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paddedRows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{row.HN || 'No data'}</TableCell>\r\n                <TableCell>{row.prefix || 'No data'}</TableCell>\r\n                <TableCell>{row.name || 'No data'}</TableCell>\r\n                <TableCell>{row.surname || 'No data'}</TableCell>\r\n                <TableCell className={getColorByGender(row.gender)}>{row.gender || 'No data'}</TableCell>\r\n                <TableCell>{row.DOB || 'No data'}</TableCell>\r\n                <TableCell>\r\n                  {row.HN ? (\r\n                    <button onClick={() => handleShowDetails(row.HN)}>\r\n                      Show Details\r\n                    </button>\r\n                  ) : (\r\n                    <button disabled>No Details</button>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {selectedPatientRecords.length > 0 && (\r\n        <div id=\"details-section\" className=\"details-section\">\r\n          <h2>Patient Records</h2>\r\n          {selectedPatientRecords.map((record, index) => (\r\n            <div key={index} className=\"record-detail\">\r\n              <p><strong>ID:</strong> {record.id}</p>\r\n              <p><strong>RR:</strong> {record.RR}</p>\r\n              <p><strong>Extra Food:</strong> {record.extra_food}</p>\r\n              <p><strong>Notes:</strong> {record.notes}</p>\r\n              <p><strong>HR:</strong> {record.HR}</p>\r\n              <p><strong>Breath Pattern:</strong> {record.breath_pattern}</p>\r\n              <p><strong>Food Type:</strong> {record.food_type}</p>\r\n              <p><strong>Extra Symptoms:</strong> {record.extra_symptoms}</p>\r\n              <p><strong>Eat Method:</strong> {record.eat_method}</p>\r\n              <p><strong>BP:</strong> {record.BP}</p>\r\n              <p><strong>Sleep:</strong> {record.sleep}</p>\r\n              <p><strong>BT:</strong> {record.BT}</p>\r\n              <p><strong>O2 Saturation:</strong> {record.O2sat}</p>\r\n              <p><strong>Excretion:</strong> {record.excretion}</p>\r\n              <p><strong>Food Intake:</strong> {record.food_intake.join(', ')}</p>\r\n              <p><strong>Conscious:</strong> {record.conscious}</p>\r\n              <p><strong>Timestamp:</strong> {new Date(record.timestamp).toLocaleString()}</p>\r\n              <hr />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {filteredRows.length > rowsPerPage && (\r\n        <div className=\"pagination\">\r\n          <span>Showing data {indexOfFirstRow + 1} to {Math.min(indexOfLastRow, filteredRows.length)} of {filteredRows.length} entries</span>\r\n          <div className=\"pagination-controls\">\r\n            <button\r\n              onClick={() => handlePageChange('prev')}\r\n              disabled={currentPage === 1}\r\n            >\r\n              {'<'}\r\n            </button>\r\n            <button\r\n              onClick={() => handlePageChange('next')}\r\n              disabled={indexOfLastRow >= filteredRows.length}\r\n            >\r\n              {'>'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n"]},"metadata":{},"sourceType":"module"}