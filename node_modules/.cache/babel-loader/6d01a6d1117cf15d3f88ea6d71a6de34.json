{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanaton Phukanngam\\\\ResponsiveWeb-TackingPatient-for-Nurse\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Table.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper'; // Mock Data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createData = (name, hospitalNumber, date, time) => {\n  return {\n    name,\n    hospitalNumber,\n    date,\n    time\n  };\n};\n\nconst rows = [createData('Jane Cooper', 'HN001', '2024-08-09', '08:30 AM'), createData('Floyd Miles', 'HN002', '2024-08-09', '02:15 PM'), createData('Ronald Richards', 'HN003', '2024-08-09', '07:45 PM') // ... other rows\n];\n\nconst TableComponent = _ref => {\n  _s();\n\n  let {\n    setSelectedSidebarItem\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const rowsPerPage = 15; // Filter and paginate data\n\n  const filteredRows = rows.filter(row => row.name.toLowerCase().includes(searchTerm.toLowerCase()) || row.hospitalNumber.toLowerCase().includes(searchTerm.toLowerCase()));\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRows = filteredRows.slice(indexOfFirstRow, indexOfLastRow);\n\n  const handlePageChange = direction => {\n    if (direction === 'next' && indexOfLastRow < filteredRows.length) {\n      setCurrentPage(currentPage + 1);\n    } else if (direction === 'prev' && currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title\",\n          children: \"All Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-link\",\n          children: \"Active Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Search by Name or Hospital Number\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-pt-button\",\n          onClick: () => setSelectedSidebarItem('Form'),\n          children: \"New PT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"Table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Hospital Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: currentRows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.hospitalNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => alert(`Details for ${row.name}`),\n                children: \"Show Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), filteredRows.length > rowsPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Showing data \", indexOfFirstRow + 1, \" to \", Math.min(indexOfLastRow, filteredRows.length), \" of \", filteredRows.length, \" entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange('prev'),\n          disabled: currentPage === 1,\n          children: '<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange('next'),\n          disabled: indexOfLastRow >= filteredRows.length,\n          children: '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableComponent, \"dGgBH5XEzYJTVyBHEFzq+fSbN2M=\");\n\n_c = TableComponent;\nexport default TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["C:/Users/Tanaton Phukanngam/ResponsiveWeb-TackingPatient-for-Nurse/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","name","hospitalNumber","date","time","rows","TableComponent","setSelectedSidebarItem","searchTerm","setSearchTerm","currentPage","setCurrentPage","rowsPerPage","filteredRows","filter","row","toLowerCase","includes","indexOfLastRow","indexOfFirstRow","currentRows","slice","handlePageChange","direction","length","e","target","value","map","index","alert","Math","min"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Table.css';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n// Mock Data\r\nconst createData = (name, hospitalNumber, date, time) => {\r\n  return { name, hospitalNumber, date, time };\r\n};\r\n\r\nconst rows = [\r\n  createData('Jane Cooper', 'HN001', '2024-08-09', '08:30 AM'),\r\n  createData('Floyd Miles', 'HN002', '2024-08-09', '02:15 PM'),\r\n  createData('Ronald Richards', 'HN003', '2024-08-09', '07:45 PM'),\r\n  // ... other rows\r\n];\r\n\r\nconst TableComponent = ({ setSelectedSidebarItem }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const rowsPerPage = 15;\r\n\r\n  // Filter and paginate data\r\n  const filteredRows = rows.filter(row =>\r\n    row.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    row.hospitalNumber.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const indexOfLastRow = currentPage * rowsPerPage;\r\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n  const currentRows = filteredRows.slice(indexOfFirstRow, indexOfLastRow);\r\n\r\n  const handlePageChange = (direction) => {\r\n    if (direction === 'next' && indexOfLastRow < filteredRows.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    } else if (direction === 'prev' && currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-table\">\r\n      <div className=\"header-container\">\r\n        <div className=\"header-left\">\r\n          <div className=\"header-title\">All Customers</div>\r\n          <div className=\"header-link\">Active Members</div>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Search by Name or Hospital Number\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button \r\n            className=\"new-pt-button\" \r\n            onClick={() => setSelectedSidebarItem('Form')}\r\n          >\r\n            New PT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className=\"Table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Hospital Number</TableCell>\r\n              <TableCell>Customer Name</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Time</TableCell>\r\n              <TableCell>Details</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {currentRows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{row.hospitalNumber}</TableCell>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell>{row.date}</TableCell>\r\n                <TableCell>{row.time}</TableCell>\r\n                <TableCell>\r\n                  <button onClick={() => alert(`Details for ${row.name}`)}>\r\n                    Show Details\r\n                  </button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {filteredRows.length > rowsPerPage && (\r\n        <div className=\"pagination\">\r\n          <span>Showing data {indexOfFirstRow + 1} to {Math.min(indexOfLastRow, filteredRows.length)} of {filteredRows.length} entries</span>\r\n          <div className=\"pagination-controls\">\r\n            <button onClick={() => handlePageChange('prev')} disabled={currentPage === 1}>\r\n              {'<'}\r\n            </button>\r\n            <button onClick={() => handlePageChange('next')} disabled={indexOfLastRow >= filteredRows.length}>\r\n              {'>'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n"]},"metadata":{},"sourceType":"module"}