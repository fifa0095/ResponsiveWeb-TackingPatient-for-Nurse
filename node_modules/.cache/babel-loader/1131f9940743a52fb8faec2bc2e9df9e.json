{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanaton Phukanngam\\\\ResponsiveWeb-TackingPatient-for-Nurse\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [HN, setHN] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const handleHNChange = async e => {\n    const HN = e.target.value;\n    setHN(HN);\n\n    if (HN.length === 7) {\n      try {\n        const response = await fetch(`http://localhost:3000/api/v1/patients/record?HN=${HN}`, {\n          method: \"GET\",\n          headers: {\n            \"Accept\": \"application/json\"\n          }\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setRecords(data.records || []); // Adjust based on your API response\n        } else {\n          console.error(\"Failed to fetch records\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching records:\", error);\n      }\n    }\n  };\n\n  const groupByHN = records => {\n    return records.reduce((groups, record) => {\n      const {\n        HN\n      } = record;\n\n      if (!groups[HN]) {\n        groups[HN] = [];\n      }\n\n      groups[HN].push(record);\n      return groups;\n    }, {});\n  };\n\n  const groupedRecords = groupByHN(records);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container-records\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E1B\\u0E23\\u0E30\\u0E08\\u0E33\\u0E27\\u0E31\\u0E19\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Hospital Number (HN)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter hospital number\",\n        value: HN,\n        onChange: handleHNChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), Object.keys(groupedRecords).map(HN => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"HN: \", HN]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"records-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: groupedRecords[HN].map((record, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/record/${record.id}`,\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, HN, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Form, \"xERNa2kOQbopV9KgZ6JC+YX93qQ=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/Tanaton Phukanngam/ResponsiveWeb-TackingPatient-for-Nurse/src/components/Form/Form.jsx"],"names":["React","useState","Form","HN","setHN","records","setRecords","handleHNChange","e","target","value","length","response","fetch","method","headers","ok","data","json","console","error","groupByHN","reduce","groups","record","push","groupedRecords","Object","keys","map","index","timestamp","name","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = () => {\r\n    const [HN, setHN] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n  \r\n    const handleHNChange = async (e) => {\r\n      const HN = e.target.value;\r\n      setHN(HN);\r\n  \r\n      if (HN.length === 7) {\r\n        try {\r\n          const response = await fetch(`http://localhost:3000/api/v1/patients/record?HN=${HN}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Accept\": \"application/json\",\r\n            },\r\n          });\r\n  \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setRecords(data.records || []); // Adjust based on your API response\r\n          } else {\r\n            console.error(\"Failed to fetch records\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching records:\", error);\r\n        }\r\n      }\r\n    };\r\n  \r\n    const groupByHN = (records) => {\r\n      return records.reduce((groups, record) => {\r\n        const { HN } = record;\r\n        if (!groups[HN]) {\r\n          groups[HN] = [];\r\n        }\r\n        groups[HN].push(record);\r\n        return groups;\r\n      }, {});\r\n    };\r\n  \r\n    const groupedRecords = groupByHN(records);\r\n  \r\n    return (\r\n      <section className=\"container-records\">\r\n        <header>ข้อมูลบันทึกประจำวัน</header>\r\n  \r\n        <div className=\"input-box\">\r\n          <label>Hospital Number (HN)</label>\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Enter hospital number\" \r\n            value={HN} \r\n            onChange={handleHNChange} \r\n            required \r\n          />\r\n        </div>\r\n  \r\n        {Object.keys(groupedRecords).map((HN) => (\r\n          <div key={HN} className=\"hn-group\">\r\n            <h2>HN: {HN}</h2>\r\n            <table className=\"records-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Timestamp</th>\r\n                  <th>Name</th>\r\n                  <th>Details</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {groupedRecords[HN].map((record, index) => (\r\n                  <tr key={index}>\r\n                    <td>{record.timestamp}</td>\r\n                    <td>{record.name}</td>\r\n                    <td><a href={`/record/${record.id}`}>Details</a></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ))}\r\n      </section>\r\n    );\r\n  };\r\n  \r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}