{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanaton Phukanngam\\\\ResponsiveWeb-TackingPatient-for-Nurse\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Table.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper'; // Mock Data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createData = (HN, prefix, name, surname, gender, DOB, details) => {\n  return {\n    HN,\n    prefix,\n    name,\n    surname,\n    gender,\n    DOB,\n    details\n  };\n};\n\nconst rows = [createData('AI12345', 'Mr.', 'John', 'Doe', 'Male', '1990-01-01', 'Detail information about John Doe.'), createData('AI12346', 'Ms.', 'Jane', 'Smith', 'Female', '1985-05-15', 'Detail information about Jane Smith.'), createData('AI12347', 'Dr.', 'Emily', 'Johnson', 'Female', '1978-09-23', 'Detail information about Emily Johnson.'), createData('AI12348', 'Mr.', 'Michael', 'Brown', 'Male', '1982-11-12', 'Detail information about Michael Brown.'), createData('AI12349', 'Mrs.', 'Linda', 'Williams', 'Female', '1992-02-19', 'Detail information about Linda Williams.'), createData('AI12350', 'Mr.', 'David', 'Jones', 'Male', '1988-06-30', 'Detail information about David Jones.'), createData('AI12351', 'Ms.', 'Laura', 'Garcia', 'Female', '1995-12-05', 'Detail information about Laura Garcia.'), createData('AI12352', 'Dr.', 'Chris', 'Miller', 'Male', '1980-03-25', 'Detail information about Chris Miller.'), createData('AI12353', 'Mr.', 'Robert', 'Martinez', 'Male', '1975-07-18', 'Detail information about Robert Martinez.'), createData('AI12354', 'Mrs.', 'Nancy', 'Hernandez', 'Female', '1989-10-04', 'Detail information about Nancy Hernandez.'), createData('AI12355', 'Ms.', 'Rachel', 'Moore', 'Female', '1991-08-29', 'Detail information about Rachel Moore.'), createData('AI12356', 'Dr.', 'James', 'Taylor', 'Male', '1983-04-17', 'Detail information about James Taylor.'), createData('AI12357', 'Mr.', 'Daniel', 'Wilson', 'Male', '1994-01-22', 'Detail information about Daniel Wilson.'), createData('AI12358', 'Ms.', 'Olivia', 'Anderson', 'Female', '1996-11-06', 'Detail information about Olivia Anderson.'), createData('AI12359', 'Dr.', 'William', 'Thomas', 'Male', '1981-09-09', 'Detail information about William Thomas.'), createData('AI12360', 'Mr.', 'Alexander', 'Jackson', 'Male', '1987-07-14', 'Detail information about Alexander Jackson.'), createData('AI12361', 'Ms.', 'Sophia', 'White', 'Female', '1993-12-12', 'Detail information about Sophia White.'), createData('AI12362', 'Dr.', 'Ethan', 'Harris', 'Male', '1984-05-06', 'Detail information about Ethan Harris.'), createData('AI12363', 'Mr.', 'Jacob', 'Clark', 'Male', '1992-03-08', 'Detail information about Jacob Clark.'), createData('AI12364', 'Ms.', 'Emma', 'Lewis', 'Female', '1990-08-19', 'Detail information about Emma Lewis.'), createData('AI12365', 'Dr.', 'Lucas', 'Roberts', 'Male', '1989-02-23', 'Detail information about Lucas Roberts.'), createData('AI12366', 'Mr.', 'Matthew', 'Walker', 'Male', '1986-12-11', 'Detail information about Matthew Walker.'), createData('AI12367', 'Ms.', 'Ava', 'Hall', 'Female', '1997-06-14', 'Detail information about Ava Hall.'), createData('AI12368', 'Dr.', 'Jackson', 'Allen', 'Male', '1982-07-03', 'Detail information about Jackson Allen.'), createData('AI12369', 'Mr.', 'Logan', 'Young', 'Male', '1985-09-28', 'Detail information about Logan Young.'), createData('AI12370', 'Ms.', 'Mia', 'King', 'Female', '1994-04-16', 'Detail information about Mia King.'), createData('AI12371', 'Dr.', 'Benjamin', 'Scott', 'Male', '1979-01-30', 'Detail information about Benjamin Scott.'), createData('AI12372', 'Mr.', 'Henry', 'Green', 'Male', '1986-10-12', 'Detail information about Henry Green.'), createData('AI12373', 'Ms.', 'Ella', 'Adams', 'Female', '1992-07-21', 'Detail information about Ella Adams.'), createData('AI12374', 'Dr.', 'Jack', 'Baker', 'Male', '1980-11-16', 'Detail information about Jack Baker.'), createData('AI12375', 'Mr.', 'James', 'Carter', 'Male', '1989-06-03', 'Detail information about James Carter.'), createData('AI12376', 'Ms.', 'Lily', 'Nelson', 'Female', '1991-09-09', 'Detail information about Lily Nelson.'), createData('AI12377', 'Dr.', 'Oliver', 'Mitchell', 'Male', '1984-05-18', 'Detail information about Oliver Mitchell.'), createData('AI12378', 'Mr.', 'Daniel', 'Perez', 'Male', '1987-08-30', 'Detail information about Daniel Perez.'), createData('AI12379', 'Ms.', 'Charlotte', 'Ramirez', 'Female', '1995-03-12', 'Detail information about Charlotte Ramirez.'), createData('AI12380', 'Dr.', 'Gabriel', 'Robinson', 'Male', '1988-02-22', 'Detail information about Gabriel Robinson.')];\n\nconst TableComponent = _ref => {\n  _s();\n\n  let {\n    setSelectedSidebarItem\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const rowsPerPage = 15; // Filter and paginate data\n\n  const filteredRows = rows.filter(row => row.HN.toLowerCase().includes(searchTerm.toLowerCase()) || row.name.toLowerCase().includes(searchTerm.toLowerCase()) || row.surname.toLowerCase().includes(searchTerm.toLowerCase()));\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRows = filteredRows.slice(indexOfFirstRow, indexOfLastRow); // Add empty rows if there are less than rowsPerPage rows\n\n  const paddedRows = [...currentRows, ...Array(Math.max(rowsPerPage - currentRows.length, 0)).fill({\n    HN: '',\n    prefix: '',\n    name: '',\n    surname: '',\n    gender: '',\n    DOB: '',\n    details: ''\n  })];\n\n  const handlePageChange = direction => {\n    if (direction === 'next' && indexOfLastRow < filteredRows.length) {\n      setCurrentPage(currentPage + 1);\n    } else if (direction === 'prev' && currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const getColorByGender = gender => {\n    if (gender === 'Male') return 'male';\n    if (gender === 'Female') return 'female';\n    return '';\n  };\n\n  const handleShowDetails = row => {\n    setSelectedPatient(row); // Scroll to the details section\n\n    document.getElementById('details-section').scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title\",\n          children: \"All Patients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-link\",\n          children: \"Active Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Search by HN, Name, or Surname\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-pt-button\",\n          onClick: () => setSelectedSidebarItem('Form'),\n          children: \"New PT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"Table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"HN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Prefix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"DOB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: paddedRows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.HN || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.prefix || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.name || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.surname || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: getColorByGender(row.gender),\n              children: row.gender || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.DOB || 'No data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.HN ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleShowDetails(row),\n                children: \"Show Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: true,\n                children: \"No Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), selectedPatient && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"details-section\",\n      className: \"details-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"HN:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.HN]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Prefix:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.prefix]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Surname:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.surname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Gender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"DOB:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.DOB]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 14\n        }, this), \" \", selectedPatient.details]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), filteredRows.length > rowsPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Showing data \", indexOfFirstRow + 1, \" to \", Math.min(indexOfLastRow, filteredRows.length), \" of \", filteredRows.length, \" entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange('prev'),\n          disabled: currentPage === 1,\n          children: '<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange('next'),\n          disabled: indexOfLastRow >= filteredRows.length,\n          children: '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableComponent, \"DDGO6hM0mQ+sWjQHOgqr4/vtuSY=\");\n\n_c = TableComponent;\nexport default TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["C:/Users/Tanaton Phukanngam/ResponsiveWeb-TackingPatient-for-Nurse/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","HN","prefix","name","surname","gender","DOB","details","rows","TableComponent","setSelectedSidebarItem","searchTerm","setSearchTerm","currentPage","setCurrentPage","selectedPatient","setSelectedPatient","rowsPerPage","filteredRows","filter","row","toLowerCase","includes","indexOfLastRow","indexOfFirstRow","currentRows","slice","paddedRows","Array","Math","max","length","fill","handlePageChange","direction","getColorByGender","handleShowDetails","document","getElementById","scrollIntoView","behavior","e","target","value","map","index","min"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Table.css';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n// Mock Data\r\nconst createData = (HN, prefix, name, surname, gender, DOB, details) => {\r\n  return { HN, prefix, name, surname, gender, DOB, details };\r\n};\r\n\r\nconst rows = [\r\n  createData('AI12345', 'Mr.', 'John', 'Doe', 'Male', '1990-01-01', 'Detail information about John Doe.'),\r\n  createData('AI12346', 'Ms.', 'Jane', 'Smith', 'Female', '1985-05-15', 'Detail information about Jane Smith.'),\r\n  createData('AI12347', 'Dr.', 'Emily', 'Johnson', 'Female', '1978-09-23', 'Detail information about Emily Johnson.'),\r\n  createData('AI12348', 'Mr.', 'Michael', 'Brown', 'Male', '1982-11-12', 'Detail information about Michael Brown.'),\r\n  createData('AI12349', 'Mrs.', 'Linda', 'Williams', 'Female', '1992-02-19', 'Detail information about Linda Williams.'),\r\n  createData('AI12350', 'Mr.', 'David', 'Jones', 'Male', '1988-06-30', 'Detail information about David Jones.'),\r\n  createData('AI12351', 'Ms.', 'Laura', 'Garcia', 'Female', '1995-12-05', 'Detail information about Laura Garcia.'),\r\n  createData('AI12352', 'Dr.', 'Chris', 'Miller', 'Male', '1980-03-25', 'Detail information about Chris Miller.'),\r\n  createData('AI12353', 'Mr.', 'Robert', 'Martinez', 'Male', '1975-07-18', 'Detail information about Robert Martinez.'),\r\n  createData('AI12354', 'Mrs.', 'Nancy', 'Hernandez', 'Female', '1989-10-04', 'Detail information about Nancy Hernandez.'),\r\n  createData('AI12355', 'Ms.', 'Rachel', 'Moore', 'Female', '1991-08-29', 'Detail information about Rachel Moore.'),\r\n  createData('AI12356', 'Dr.', 'James', 'Taylor', 'Male', '1983-04-17', 'Detail information about James Taylor.'),\r\n  createData('AI12357', 'Mr.', 'Daniel', 'Wilson', 'Male', '1994-01-22', 'Detail information about Daniel Wilson.'),\r\n  createData('AI12358', 'Ms.', 'Olivia', 'Anderson', 'Female', '1996-11-06', 'Detail information about Olivia Anderson.'),\r\n  createData('AI12359', 'Dr.', 'William', 'Thomas', 'Male', '1981-09-09', 'Detail information about William Thomas.'),\r\n  createData('AI12360', 'Mr.', 'Alexander', 'Jackson', 'Male', '1987-07-14', 'Detail information about Alexander Jackson.'),\r\n  createData('AI12361', 'Ms.', 'Sophia', 'White', 'Female', '1993-12-12', 'Detail information about Sophia White.'),\r\n  createData('AI12362', 'Dr.', 'Ethan', 'Harris', 'Male', '1984-05-06', 'Detail information about Ethan Harris.'),\r\n  createData('AI12363', 'Mr.', 'Jacob', 'Clark', 'Male', '1992-03-08', 'Detail information about Jacob Clark.'),\r\n  createData('AI12364', 'Ms.', 'Emma', 'Lewis', 'Female', '1990-08-19', 'Detail information about Emma Lewis.'),\r\n  createData('AI12365', 'Dr.', 'Lucas', 'Roberts', 'Male', '1989-02-23', 'Detail information about Lucas Roberts.'),\r\n  createData('AI12366', 'Mr.', 'Matthew', 'Walker', 'Male', '1986-12-11', 'Detail information about Matthew Walker.'),\r\n  createData('AI12367', 'Ms.', 'Ava', 'Hall', 'Female', '1997-06-14', 'Detail information about Ava Hall.'),\r\n  createData('AI12368', 'Dr.', 'Jackson', 'Allen', 'Male', '1982-07-03', 'Detail information about Jackson Allen.'),\r\n  createData('AI12369', 'Mr.', 'Logan', 'Young', 'Male', '1985-09-28', 'Detail information about Logan Young.'),\r\n  createData('AI12370', 'Ms.', 'Mia', 'King', 'Female', '1994-04-16', 'Detail information about Mia King.'),\r\n  createData('AI12371', 'Dr.', 'Benjamin', 'Scott', 'Male', '1979-01-30', 'Detail information about Benjamin Scott.'),\r\n  createData('AI12372', 'Mr.', 'Henry', 'Green', 'Male', '1986-10-12', 'Detail information about Henry Green.'),\r\n  createData('AI12373', 'Ms.', 'Ella', 'Adams', 'Female', '1992-07-21', 'Detail information about Ella Adams.'),\r\n  createData('AI12374', 'Dr.', 'Jack', 'Baker', 'Male', '1980-11-16', 'Detail information about Jack Baker.'),\r\n  createData('AI12375', 'Mr.', 'James', 'Carter', 'Male', '1989-06-03', 'Detail information about James Carter.'),\r\n  createData('AI12376', 'Ms.', 'Lily', 'Nelson', 'Female', '1991-09-09', 'Detail information about Lily Nelson.'),\r\n  createData('AI12377', 'Dr.', 'Oliver', 'Mitchell', 'Male', '1984-05-18', 'Detail information about Oliver Mitchell.'),\r\n  createData('AI12378', 'Mr.', 'Daniel', 'Perez', 'Male', '1987-08-30', 'Detail information about Daniel Perez.'),\r\n  createData('AI12379', 'Ms.', 'Charlotte', 'Ramirez', 'Female', '1995-03-12', 'Detail information about Charlotte Ramirez.'),\r\n  createData('AI12380', 'Dr.', 'Gabriel', 'Robinson', 'Male', '1988-02-22', 'Detail information about Gabriel Robinson.')\r\n];\r\n\r\nconst TableComponent = ({ setSelectedSidebarItem }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n  const rowsPerPage = 15;\r\n\r\n  // Filter and paginate data\r\n  const filteredRows = rows.filter(row =>\r\n    row.HN.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    row.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    row.surname.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const indexOfLastRow = currentPage * rowsPerPage;\r\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n  const currentRows = filteredRows.slice(indexOfFirstRow, indexOfLastRow);\r\n\r\n  // Add empty rows if there are less than rowsPerPage rows\r\n  const paddedRows = [\r\n    ...currentRows,\r\n    ...Array(Math.max(rowsPerPage - currentRows.length, 0)).fill({\r\n      HN: '',\r\n      prefix: '',\r\n      name: '',\r\n      surname: '',\r\n      gender: '',\r\n      DOB: '',\r\n      details: ''\r\n    })\r\n  ];\r\n\r\n  const handlePageChange = (direction) => {\r\n    if (direction === 'next' && indexOfLastRow < filteredRows.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    } else if (direction === 'prev' && currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const getColorByGender = (gender) => {\r\n    if (gender === 'Male') return 'male';\r\n    if (gender === 'Female') return 'female';\r\n    return '';\r\n  };\r\n\r\n  const handleShowDetails = (row) => {\r\n    setSelectedPatient(row);\r\n    // Scroll to the details section\r\n    document.getElementById('details-section').scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-table\">\r\n      <div className=\"header-container\">\r\n        <div className=\"header-left\">\r\n          <div className=\"header-title\">All Patients</div>\r\n          <div className=\"header-link\">Active Records</div>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Search by HN, Name, or Surname\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button \r\n            className=\"new-pt-button\" \r\n            onClick={() => setSelectedSidebarItem('Form')}\r\n          >\r\n            New PT\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className=\"Table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>HN</TableCell>\r\n              <TableCell>Prefix</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Surname</TableCell>\r\n              <TableCell>Gender</TableCell>\r\n              <TableCell>DOB</TableCell>\r\n              <TableCell>Details</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paddedRows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{row.HN || 'No data'}</TableCell>\r\n                <TableCell>{row.prefix || 'No data'}</TableCell>\r\n                <TableCell>{row.name || 'No data'}</TableCell>\r\n                <TableCell>{row.surname || 'No data'}</TableCell>\r\n                <TableCell className={getColorByGender(row.gender)}>{row.gender || 'No data'}</TableCell>\r\n                <TableCell>{row.DOB || 'No data'}</TableCell>\r\n                <TableCell>\r\n                  {row.HN ? (\r\n                    <button onClick={() => handleShowDetails(row)}>\r\n                      Show Details\r\n                    </button>\r\n                  ) : (\r\n                    <button disabled>No Details</button>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {selectedPatient && (\r\n        <div id=\"details-section\" className=\"details-section\">\r\n          <h2>Patient Details</h2>\r\n          <p><strong>HN:</strong> {selectedPatient.HN}</p>\r\n          <p><strong>Prefix:</strong> {selectedPatient.prefix}</p>\r\n          <p><strong>Name:</strong> {selectedPatient.name}</p>\r\n          <p><strong>Surname:</strong> {selectedPatient.surname}</p>\r\n          <p><strong>Gender:</strong> {selectedPatient.gender}</p>\r\n          <p><strong>DOB:</strong> {selectedPatient.DOB}</p>\r\n          <p><strong>Details:</strong> {selectedPatient.details}</p>\r\n        </div>\r\n      )}\r\n\r\n      {filteredRows.length > rowsPerPage && (\r\n        <div className=\"pagination\">\r\n          <span>Showing data {indexOfFirstRow + 1} to {Math.min(indexOfLastRow, filteredRows.length)} of {filteredRows.length} entries</span>\r\n          <div className=\"pagination-controls\">\r\n            <button\r\n              onClick={() => handlePageChange('prev')}\r\n              disabled={currentPage === 1}\r\n            >\r\n              {'<'}\r\n            </button>\r\n            <button\r\n              onClick={() => handlePageChange('next')}\r\n              disabled={indexOfLastRow >= filteredRows.length}\r\n            >\r\n              {'>'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n"]},"metadata":{},"sourceType":"module"}