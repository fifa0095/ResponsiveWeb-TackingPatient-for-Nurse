{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanaton Phukanngam\\\\ResponsiveWeb-TackingPatient-for-Nurse\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Table.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper'; // Mock Data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createData = function (HN, prefix, name, surname, gender, DOB) {\n  let records = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  return {\n    HN,\n    prefix,\n    name,\n    surname,\n    gender,\n    DOB,\n    records\n  };\n};\n\nconst rows = [createData('AI12345', 'Mr.', 'John', 'Doe', 'Male', '1990-01-01', [{\n  id: 'rec_Fri Aug 09 2024 14:39:25 GMT+0700 (เวลาอินโดจีน)',\n  RR: 'ปกติ',\n  extra_food: 'ผักบด',\n  notes: 'ไม่มีอาการผิดปกติ',\n  HR: 'ปกติ',\n  breath_pattern: 'หายใจปกติ',\n  food_type: 'อาหารปกติ',\n  extra_symptoms: 'มีไข้, ไอ',\n  eat_method: 'รับประทานเองได้',\n  BP: 'ปกติ',\n  sleep: 'นอนหลับได้',\n  BT: 'ไม่มีไข้',\n  O2sat: 'ปกติ',\n  excretion: 'ดี',\n  food_intake: ['ข้าว', 'ผลไม้'],\n  conscious: 'ตื่น รู้สึกตัวดี',\n  timestamp: '2024-08-09T14:39:25.853Z'\n} // Add more records as needed\n]) // Add more rows as needed\n];\n\nconst TableComponent = () => {\n  _s();\n\n  const [selectedRow, setSelectedRow] = useState(null);\n\n  const handleShowDetails = HN => {\n    setSelectedRow(selectedRow === HN ? null : HN);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-table\",\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"Table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Hospital Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Prefix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"DOB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.HN\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.prefix\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.surname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.DOB\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleShowDetails(row.HN),\n                  children: selectedRow === row.HN ? 'Hide Details' : 'Show Details'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), selectedRow === row.HN && row.records.map((record, subIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n              className: \"sub-row\",\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 5,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"Record \", subIndex + 1, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"RR: \", record.RR]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Extra Food: \", record.extra_food]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Notes: \", record.notes]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"HR: \", record.HR]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Breath Pattern: \", record.breath_pattern]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Food Type: \", record.food_type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Extra Symptoms: \", record.extra_symptoms]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Eat Method: \", record.eat_method]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"BP: \", record.BP]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Sleep: \", record.sleep]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"BT: \", record.BT]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"O2sat: \", record.O2sat]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Excretion: \", record.excretion]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Food Intake: \", record.food_intake.join(', ')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Conscious: \", record.conscious]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Timestamp: \", new Date(record.timestamp).toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this)]\n            }, subIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableComponent, \"uNqdeC4/AX7zbEPErixrXmI9Bw8=\");\n\n_c = TableComponent;\nexport default TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["C:/Users/Tanaton Phukanngam/ResponsiveWeb-TackingPatient-for-Nurse/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","HN","prefix","name","surname","gender","DOB","records","rows","id","RR","extra_food","notes","HR","breath_pattern","food_type","extra_symptoms","eat_method","BP","sleep","BT","O2sat","excretion","food_intake","conscious","timestamp","TableComponent","selectedRow","setSelectedRow","handleShowDetails","map","row","index","record","subIndex","join","Date","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Table.css';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n// Mock Data\r\nconst createData = (HN, prefix, name, surname, gender, DOB, records = []) => {\r\n  return { HN, prefix, name, surname, gender, DOB, records };\r\n};\r\n\r\nconst rows = [\r\n  createData('AI12345', 'Mr.', 'John', 'Doe', 'Male', '1990-01-01', [\r\n    {\r\n      id: 'rec_Fri Aug 09 2024 14:39:25 GMT+0700 (เวลาอินโดจีน)',\r\n      RR: 'ปกติ',\r\n      extra_food: 'ผักบด',\r\n      notes: 'ไม่มีอาการผิดปกติ',\r\n      HR: 'ปกติ',\r\n      breath_pattern: 'หายใจปกติ',\r\n      food_type: 'อาหารปกติ',\r\n      extra_symptoms: 'มีไข้, ไอ',\r\n      eat_method: 'รับประทานเองได้',\r\n      BP: 'ปกติ',\r\n      sleep: 'นอนหลับได้',\r\n      BT: 'ไม่มีไข้',\r\n      O2sat: 'ปกติ',\r\n      excretion: 'ดี',\r\n      food_intake: ['ข้าว', 'ผลไม้'],\r\n      conscious: 'ตื่น รู้สึกตัวดี',\r\n      timestamp: '2024-08-09T14:39:25.853Z',\r\n    },\r\n    // Add more records as needed\r\n  ]),\r\n  // Add more rows as needed\r\n];\r\n\r\nconst TableComponent = () => {\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n\r\n  const handleShowDetails = (HN) => {\r\n    setSelectedRow(selectedRow === HN ? null : HN);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-table\">\r\n      <TableContainer component={Paper}>\r\n        <Table className=\"Table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Hospital Number</TableCell>\r\n              <TableCell>Prefix</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Surname</TableCell>\r\n              <TableCell>Gender</TableCell>\r\n              <TableCell>DOB</TableCell>\r\n              <TableCell>Details</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <React.Fragment key={index}>\r\n                <TableRow>\r\n                  <TableCell>{row.HN}</TableCell>\r\n                  <TableCell>{row.prefix}</TableCell>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell>{row.surname}</TableCell>\r\n                  <TableCell>{row.gender}</TableCell>\r\n                  <TableCell>{row.DOB}</TableCell>\r\n                  <TableCell>\r\n                    <button onClick={() => handleShowDetails(row.HN)}>\r\n                      {selectedRow === row.HN ? 'Hide Details' : 'Show Details'}\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n                {selectedRow === row.HN &&\r\n                  row.records.map((record, subIndex) => (\r\n                    <TableRow key={subIndex} className=\"sub-row\">\r\n                      <TableCell colSpan={2} />\r\n                      <TableCell colSpan={5}>\r\n                        <div>\r\n                          <strong>Record {subIndex + 1}:</strong>\r\n                          <div>RR: {record.RR}</div>\r\n                          <div>Extra Food: {record.extra_food}</div>\r\n                          <div>Notes: {record.notes}</div>\r\n                          <div>HR: {record.HR}</div>\r\n                          <div>Breath Pattern: {record.breath_pattern}</div>\r\n                          <div>Food Type: {record.food_type}</div>\r\n                          <div>Extra Symptoms: {record.extra_symptoms}</div>\r\n                          <div>Eat Method: {record.eat_method}</div>\r\n                          <div>BP: {record.BP}</div>\r\n                          <div>Sleep: {record.sleep}</div>\r\n                          <div>BT: {record.BT}</div>\r\n                          <div>O2sat: {record.O2sat}</div>\r\n                          <div>Excretion: {record.excretion}</div>\r\n                          <div>Food Intake: {record.food_intake.join(', ')}</div>\r\n                          <div>Conscious: {record.conscious}</div>\r\n                          <div>Timestamp: {new Date(record.timestamp).toLocaleString()}</div>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </React.Fragment>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n"]},"metadata":{},"sourceType":"module"}